{"version":3,"sources":["logo.svg","components/LinkCard.js","components/IconCard.js","components/VSCodeEditor.js","App.js","reportWebVitals.js","components/AmongUs.jsx","index.js","glowing.module.scss"],"names":["RoundButton","styled","button","_templateObject","_taggedTemplateLiteral","TextBuffer","div","_templateObject2","SvgTile","Component","potentialJokes","keys","Object","randKey","Math","floor","random","length","code","_defineProperty","undefined","raw_lines","JSON","stringify","split","findLineNumberGivenKeyPath","jsonObj","key","i","indexOf","findScopeGivenLineNumber","lineNumber","openContainerRegex","closeContainerRegex","stack","checkingIndex","test","push","pop","start","Array","fill","map","_","idx","VSCodeEditorAsPage","_jsx","className","children","VSCodeEditor","_useState","useState","_useState2","_slicedToArray","mutedLines","setMutedLines","_useState3","_useState4","lines","setLines","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isDoingBarrelRoll","setIsDoingBarrelRoll","lineLinks","link","displayText","embed","initialCollapsedLines","_useState9","_useState10","indentSize","setIndentSize","_useState11","_useState12","lastLineClicked","setLastLineClicked","useEffect","generateCodeAsLines","newMutedLines","forEach","line","collapsed","scopedLines","index","concat","_toConsumableArray","timer","setTimeout","clearTimeout","indent","arguments","codeAsStr","replace","match","join","cls","mustache_key","displaytext","keySpanRegex","isKeyLine","htmlLine","includes","_jsxs","onClick","_objectSpread","filter","finalHtmlLine","penultimateChar","value","lineClicked","console","log","dangerouslySetInnerHTML","__html","toString","BsArrowRepeat","onChange","event","Number","target","num","defaultValue","val","disabled","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","AmongUs","ReactDOM","render","React","StrictMode","document","getElementById","navigator","geolocation","getCurrentPosition","pos","module","exports"],"mappings":"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","file":"static/js/main.945655c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable react/prop-types */\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst RoundButton = styled.button`\n    border-radius: 20px;\n    border: none;\n    // box-shadow: 7px 7px 5px rgba(0, 0, 0, 0.25);\n    padding: 10px;\n    transition: transform, 0.5s;\n    transition: box-shadow, 0.5s;\n    font-family: 'Avenir', Helvetica, sans-serif;\n \n    &:hover {\n        position: relative;\n        box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.15);\n        transform: translate(-3px, -3px);\n    }\n    \n`;\n\nconst TextBuffer = styled.div`\n    padding: 15px\n`;\n\nclass LinkCard extends Component {\n    render() {\n        return <a href={this.props.link}>\n            <RoundButton>\n                <TextBuffer>\n                    {this.props.children}\n                </TextBuffer>\n            </RoundButton>\n        </a>;\n    }\n}\n\nexport default LinkCard;\n\nLinkCard.propTypes = {\n    // color: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    link: PropTypes.string.isRequired,\n    // metrics_link: PropTypes.string.isRequired\n};","/* eslint-disable react/prop-types */\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst SvgTile = styled.button`\n    // background-color: white;\n    border-radius: 20px;\n    border: none;\n    // drop-shadow: 7px 7px 5px rgba(0, 0, 0, 0.25);\n    padding: 10px;\n    transition: transform, 0.5s;\n    transition: box-shadow, 0.5s;\n \n    &:hover {\n        position: relative;\n        box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.25);\n        transform: translate(-3px, -3px);\n    }\n    \n    & > * {\n        drop-shadow: 100px\n    }\n`;\n\nlet Icons = {};\n\n// Icons['github'] = require('../icons/Github').default;\n// Icons['facebook'] = require('../icons/Facebook').default;\n\nconst reportClickingOnLink = (link) => {\n    console.log(`clicked on ${link}`);\n};\n\nclass IconCard extends Component {\n    // onClick() {\n        \n    // }\n\n    render() {\n        return <a href={this.props.link}>\n            <SvgTile onClick={reportClickingOnLink(this.props.link)}>\n                {this.props.children}\n            </SvgTile>\n        </a>;\n    }\n}\n\nexport default IconCard;\n\nIconCard.propTypes = {\n    // color: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    // metrics_link: PropTypes.string.isRequired\n};\n\nexport {\n    Icons\n};\n\n","/* eslint-disable react/react-in-jsx-scope */\nimport { useEffect, useState } from \"react\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\nimport \"./VSCodeEditor.css\";\n\nconst potentialJokes = {\n    \"hotel\": \"trivago\",\n    \"everything_else\": \"mastercard\",\n    \"yee\": \"haw\",\n    \"motivation\": \"gone\",\n    \"tired\": \"always\",\n    \"coincidence\": \"I think not!\",\n    \"were_roommates\": \"them\",\n    \"chickens\": \"looked_at\",\n    \"does scooby got the booty\": \"scooby doo\",\n    \"sha va cado\": \"fre\",\n    \"croissant_dropped\": \"almost, but no\",\n    \"memes\": \"dank\",\n    \"Two Bros\": {\n        \"chillin\": true,\n        \"location\": \"hot tub\",\n        \"distance\": \"5ft\",\n        \"reason\": \"not gay\"\n    },\n    \"This Mans\": {\n        \"career\": \"about to end\",\n        \"reason\": \"me\"\n    },\n    \"Grape\": \"had surgery done\",\n    \"is_there_cake\": false,\n    \"Rick Astley\": {\n        \"give you up\": false,\n        \"let you down\": false,\n        \"run around and desert you\": false,\n        \"make you cry\": false,\n        \"say goodbye\": false,\n        \"tell a lie and hurt you\": false,\n    },\n    \"Obi-Wan Kenobi\": {\n        \"has\": [\"high ground\"],\n        \"underestimates\": [\"not anakin's power\"],\n        \"has_bad_feeling_about\": \"this\"\n    },\n    \"Anakin\": {\n        \"hates\": [\"sand\", \"the jedi\"],\n        \"overestimates\": [\"his own power\", \"palpatine\"]\n    },\n    \"Tween with Naruto Headband\": {\n        \"has_power_of\": [\"God\", \"Anime\"],\n        \"on_his_side\": true\n    },\n    \"Tom Holland's Spiderman\": {\n        \"feel_so_good\": false\n    },\n    \"Antoine Dodson\": {\n        \"recommends_hiding\": [\"kids\", \"wife\"]\n    },\n    \"Kid in Zombie Makeup\": {\n        \"likes\": [\"turtles\"]\n    },\n};\n\nconst keys = Object.keys(potentialJokes);\nconst randKey = keys[Math.floor(Math.random() * keys.length)];\n\nconst code = {\n    \"Daniel Lopez\": {\n        \"Resume\": \"{{resume}}\",\n        \"other quick links\": [\n            \"{{ql_linktree}}\",\n        ],\n        \"Education\": {\n            \"Master's Degree\": {\n                \"School\": \"University of Nevada, Reno\",\n                \"Degree\": \"Masters of Computer Science\",\n                \"Year\": 2018,\n                \"Graduated\": true,\n                \"Focuses\": [\n                    \"Multi CPU/GPU Programming\",\n                    \"Graphics Engines\",\n                    \"Neural Network Architecture\",\n                ]\n            },\n            \"Bachelor's Degree\": {\n                \"School\": \"University of Nevada, Reno\",\n                \"Degree\": \"Bachelors of Computer Science\",\n                \"Year\": 2017,\n                \"Graduated\": true,\n                \"Minor\": \"Mathematics\",\n                \"Focuses\": [\n                    \"Graphics Engine Implementation\",\n                    \"Game Engines\",\n                    \"Cryptography\",\n                ]\n            },\n        },\n        \"Work Experience\": {\n            \"Simple Rose\": {\n                \"Description\": \"High Performance Computing and Solver Optimization Startup\",\n                \"Location\": \"St. Louis, Missouri\",\n                \"Remote\": true,\n                \"Homepage\": \"{{simplerose_homepage_link}}\",\n                \"Positions\": {\n                    \"Full Stack Engineer\": {\n                        \"Start Date\": \"3/2023\",\n                        \"End Date\": undefined,\n\n                        \"Responsabilities\": []\n                    }\n                }\n            },\n            \"Sky Hive AI\": {\n                \"Description\": \"Workforce Intelligence and Reskilling Startup\",\n                \"Location\": \"Toronto, Ontario, Canada\",\n                \"Remote\": true,\n                \"Homepage\": \"{{skyhive_homepage_link}}\",\n                \"Positions\": {\n                    \"Senior DevOps Engineer\": {\n                        \"StartDate\": \"11/2022\",\n                        \"EndDate\": \"2/2023\",\n    \n                        \"Responsabilities\": [\n                            \"Architected a robust alerting system to dynamically create and funnal all Cloudwatch, MongoDB alerts to 3rd party services\",\n                            \"Developed an extensible DevOps CLI specific to the ecosystem\"\n                        ],\n                    }\n                },\n                \"Contact\": {\n                    \"Name\": \"Charles Marker\",\n                    \"Email\": \"charles@skyhive.io\"\n                }\n            },\n\n            \"NoCap Shows\": {\n                \"Description\": \"Online Concert Streaming Services Startup\",\n                \"Location\": \"Malibu, CA\",\n                \"Remote\": true,\n                \"Homepage\": \"{{nocap_homepage_link}}\",\n                \"Positions\": {\n                    \"Full Stack Engineer\": {\n                        \"StartDate\": \"8/2021\",\n                        \"EndDate\": \"11/2022\",\n                        \"Responsabilities\": [\n                            \"Standardized deployment and release engineering across full stack using Github Actions and GCP\",\n                            \"Fast paced iterative development on video streaming website and internal tools\",\n                            \"Stood up and maintained new APIs that scale and adapt to unstandardized data\",\n                            \"Occassional Social Media Manager (Tik Tok)\",\n                        ]\n                    }\n                },\n                \"Contact\": {\n                    \"Name\": \"Josh Smallman\",\n                    \"Email\": \"js@nocapshows.com\"\n                }\n            },\n\n            \"Intuit\": {\n                \"Description\": \"Turbo Tax, Consumer Group\",\n                \"Location\": \"San Diego, CA\",\n                \"Remote\": false,\n                \"Homepage\": \"{{intuit_homepage_link}}\",\n                \"Positions\": {\n                    \"Software Engineer 2\": {\n                        \"StartDate\": \"01/2020\",\n                        \"EndDate\": \"07/2021\",\n                        \"Responsabilities\": [\n                            \"Gained extensive experience in setting up Jenkins pipelines and developing Jenkins plugins\",\n                            \"Templatized Dockerfiles and other deployment files for ease of generation\",\n                            \"Led project aimed at enhancing developer Git hooks for automated task progress management\"\n                        ]\n                    },\n                    \"Software Engineer 1\": {\n                        \"StartDate\": \"08/2018\",\n                        \"EndDate\": \"01/2020\",\n                        \"Responsabilities\": [\n                            \"Worked on internal tools team for proprietary language support\",\n                            \"Enhanced automation for generation of back-end microservices and UI projects\",\n                            \"Developing Dev Productivity Tools including customized Githooks and artifact deployment\"\n                        ]\n                    }\n                },\n                \"Contact\": {\n                    \"Name\": \"Kathiravan Tamilvanan\",\n                    \"Email\": \"kathiravan_tamilvanan@intuit.com\"\n                }\n            }\n        },\n        \"Publications\": {\n            \"Avaler's Adventure\": {\n                \"Description\": \"Therapeutic Game for Speech Pathology Dept. at University of Nevada, Reno\",\n                \"Citation\": \"Catherine R. Pollock, Daniel A. Lopez, et al. (2017) “Avaler’s Adventure: An Open Source Game for Dysphagia Therapy”, Proceedings of the ISCA 26th International Conference on Software Engineering and Data Engineering (SEDE 2017)\",\n                \"Paper\": \"{{avalers_adventure}}\"\n            },\n            \"Capsule Network Optimization\": {\n                \"Description\": \"Paper derived from Thesis work; building Capsule Networks in raw CUDA, then using a Genetic Algorithm to determine hyperparameters\",\n                \"Citation\": \"Lopez, D. A., Wu, R., Barford, L., & Harris, F.C. (2019) A Memory Layout for Dynamically Routed Capsule Layers. In 16th Iternational Conference on Information Technology New Generations (ITNG 2019) (pp. 317-324)\",\n                \"Paper\": \"{{capsule_network}}\"\n            },\n            \"Today, I Will Fly\": {\n                \"Description\": \"Original Composition for a YouTube Original\",\n                \"Citation\": \"Daniel Lopez, Orchestral Score. “Create Together #WithMe”, YouTube Originals, HitRecord series, S1 E4, “Today I Will Fly” (Cold Open)\",\n                \"YouTube\": \"{{today_i_will_fly_youtube_link}}\",\n                \"MuseScore\": \"{{today_i_will_fly_musescore_link}}\"\n            },\n            \"Logan's Memory\": {\n                \"Description\": \"Single, Classical Music, 2023, DistroKidd\",\n                \"Citation\": \"Lopez, Daniel. “Logan's Memory”, 4582490 Records DK, ISRC QZTB32209522, 2022.\",\n                \"Spotify\": \"{{spotify}}\"\n            }\n        },\n    },\n    [randKey]: potentialJokes[randKey],\n};\n\nconst raw_lines = JSON.stringify(code, null, 3).split(\"\\n\");\n\n\nconst findLineNumberGivenKeyPath = (jsonObj, key) => {\n    for (let i = 0; i < raw_lines.length; i++) {\n        if (raw_lines[i].indexOf(key) !== -1) {\n            return i;\n        }\n    }\n    return -1;\n};\n\nconst findScopeGivenLineNumber = (jsonObj, lineNumber) => {\n    const openContainerRegex = /[[{]{1}/;\n    const closeContainerRegex = /[\\]}]{1}/;\n\n    let stack = [];\n    let checkingIndex = lineNumber;\n\n    // console.log(jsonObj, lines[checkingIndex]);\n    // console.log('is open, is close', openContainerRegex.test(lines[checkingIndex]), closeContainerRegex.test(lines[checkingIndex]))\n\n    if (openContainerRegex.test(raw_lines[checkingIndex]) && closeContainerRegex.test(raw_lines[checkingIndex])) {\n    // if there's no open scope here, then the scope is just the line itself\n        return [lineNumber];\n    }\n    else if (openContainerRegex.test(raw_lines[checkingIndex])) {\n        stack.push(raw_lines[checkingIndex]); // push the whole line, screw it\n    } else if (closeContainerRegex.test(raw_lines[checkingIndex])) {\n        return []; // if it's a close number, just return no scope\n    } else {\n    // it's both, it's just the line\n        return [lineNumber];\n    }\n\n    // console.log('stack', stack)\n\n    while(stack.length !== 0 && checkingIndex < raw_lines.length) {\n        if (openContainerRegex.test(raw_lines[checkingIndex]) && closeContainerRegex.test(raw_lines[checkingIndex])) {\n            // it has both, self contained line, stack is clean\n            checkingIndex += 1;\n        }\n        else if (openContainerRegex.test(raw_lines[checkingIndex]) && stack.indexOf(raw_lines[checkingIndex]) === -1) {\n            stack.push(raw_lines[checkingIndex]);\n            checkingIndex += 1;\n        }\n        else if (closeContainerRegex.test(raw_lines[checkingIndex])) {\n            // pop one off the stack\n            stack.pop();\n            checkingIndex += 1;\n        } else {\n            //no indicator, just keep going\n            checkingIndex += 1;\n        }\n    // console.log('stack in loop', stack, checkingIndex, lines[checkingIndex]);\n    }\n\n    const start = lineNumber + 1;\n    const end = checkingIndex - 1;\n    return Array(end - start + 1).fill().map((_, idx) => start + idx);\n};\n\n// const getLineNumbersForKey = (jsonObj, key, path = [], lineNumbers = {}) => {\n//     for (const [k, v] of Object.entries(jsonObj)) {\n//         const currentPath = [...path, k];\n//         if (k === key) {\n//             lineNumbers[currentPath.join(\".\")] = lineNumbers[currentPath.join(\".\")] || [];\n//             lineNumbers[currentPath.join(\".\")].push(findLineNumberGivenKeyPath(jsonObj, key));\n//             // return currentPath.join(\".\");\n//         }\n//         if (typeof v === \"object\" && v !== null) {\n//             getLineNumbersForKey(v, key, currentPath, lineNumbers);\n//         }\n//     }\n//     return lineNumbers;\n// };\n\nconst VSCodeEditorAsPage = () => {\n    return <div className=\"window_page\">\n        <VSCodeEditor />\n    </div>;\n};\n\n// TODO: convert to typescript\nconst VSCodeEditor = () => {\n    const [mutedLines, setMutedLines] = useState([]);\n    const [lines, setLines] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isDoingBarrelRoll, setIsDoingBarrelRoll] = useState(false);\n    const lineLinks = {\n        \"resume\": {\n            link: \"http://tennisgazelle.com/resume.pdf\",\n            displayText: \"<- Clickable lines will be in orange ->\"\n        },\n        \"ql_linktree\": {\n            link: \"https://linktr.ee/tennisgazelle\",\n            displayText: \"Link Tree\"\n        },\n        \"spotify\": {\n            link: \"https://open.spotify.com/track/1m0usc3bqJnlDREUqU3REb?si=725fb8b7a51a499e\",\n            displayText: \"Stream my first single here\"\n        },\n        \"capsule_network\": {\n            link: \"https://www.cse.unr.edu/~fredh/papers/conf/194-amlfdrcl/paper.pdf\",\n            displayText: \"Paper (PDF)\"\n        },\n        \"avalers_adventure\": {\n            link: \"https://www.cse.unr.edu/~fredh/papers/conf/180-aaaosgfdt/paper.pdf\",\n            displayText: \"Paper (PDF)\"\n        },\n        \"today_i_will_fly_youtube_link\": {\n            link: \"https://www.youtube.com/watch?v=-fl6HTIRjOg&t=46s&ab_channel=HITRECORD\",\n            displayText: \"The Video (Sample)\",\n            embed: \"<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/-fl6HTIRjOg\\\" title=\\\"YouTube video player\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\\" allowfullscreen>Youtube</iframe>\"\n        },\n        \"today_i_will_fly_musescore_link\": {\n            link: \"https://musescore.com/user/4187496/scores/6267911\",\n            displayText: \"The Score (Full; Sample starts at )\"\n        },\n        \"simplerose_homepage_link\": {\n            link: \"https://simplerose.com/index.html\",\n            displayText: \"Simple Rose Home Page\"\n        },\n        \"skyhive_homepage_link\": {\n            link: \"https://www.skyhive.ai/\",\n            displayText: \"Sky Hive Page\"\n        },\n        \"nocap_homepage_link\": {\n            link: \"https://nocapshows.com/\",\n            displayText: \"No Cap Page\"\n        },\n        \"intuit_homepage_link\": {\n            link: \"https://www.intuit.com/\",\n            displayText: \"Intuit Home Page\"\n        }\n    };\n    const initialCollapsedLines = [\n        findLineNumberGivenKeyPath(code, \"Education\"),\n        findLineNumberGivenKeyPath(code, \"Master's Degree\"),\n        findLineNumberGivenKeyPath(code, \"Bachelor's Degree\"),\n\n        findLineNumberGivenKeyPath(code, \"Work Experience\"),\n        findLineNumberGivenKeyPath(code, \"Simple Rose\"),\n        findLineNumberGivenKeyPath(code, \"Sky Hive AI\"),\n        findLineNumberGivenKeyPath(code, \"NoCap Shows\"),\n        findLineNumberGivenKeyPath(code, \"Intuit\"),\n\n        findLineNumberGivenKeyPath(code, \"Publications\"),\n        findLineNumberGivenKeyPath(code, \"Avaler's Adventure\"),\n        findLineNumberGivenKeyPath(code, \"Capsule Network Optimization\"),\n        findLineNumberGivenKeyPath(code, \"Today, I Will Fly\"),\n        findLineNumberGivenKeyPath(code, \"Logan's Memory\"),\n        // findLineNumberGivenKeyPath(code, \"or click any of these\"),\n\n        findLineNumberGivenKeyPath(code, randKey),\n    ];\n    const [indentSize, setIndentSize] = useState(3);\n    const [lastLineClicked, setLastLineClicked] = useState(-1);\n\n    useEffect(() => {\n        setLines(generateCodeAsLines(code, indentSize));\n    }, []);\n\n    useEffect(() => {\n        // any times the lines get updated, go through and figure out the muted lines\n        let newMutedLines = [];\n\n        lines.forEach(line => {\n            if (line.collapsed) {\n                const scopedLines = findScopeGivenLineNumber(code, line.index);\n\n                // single lines need not collapse\n                if (scopedLines.length > 1) {\n                    newMutedLines = [...newMutedLines, ...scopedLines];\n                }\n            }\n        });\n\n        setMutedLines(newMutedLines);\n        setIsLoading(false);\n    }, [lines]);\n\n    useEffect(() => {\n        let timer;\n        if (isDoingBarrelRoll) {\n            timer = setTimeout(() => {\n                setIsDoingBarrelRoll(false);\n            }, 2000); // turn off animation after 2 seconds\n        }\n        return () => clearTimeout(timer);\n    }, [isDoingBarrelRoll]);\n\n    const clickedOnLine = (lineClicked) => {\n    // is this line clickable?\n        console.log(\"inside click callback\", lineClicked);\n        setLastLineClicked(lineClicked.index);\n        if (!lineClicked.isKeyLine) {\n            return;\n        }\n\n        // if it was already collapsed, uncollapse it\n        if (lineClicked.collapsed) {\n            // uncollapse\n            // const newLinesToMute = findScope(code, lineClicked.index);\n            // setMutedLines(mutedLines.filter(lineNum => newLinesToMute.indexOf(lineNum) === -1));\n            setLines(lines.map((line, index) => {\n                return { \n                    ...line, \n                    collapsed: index === lineClicked.index ? false : line.collapsed };\n            }));\n        } else {\n            // collapse\n            const newLinesToMute = findScopeGivenLineNumber(code, lineClicked.index);\n            // setLines(lines.map((line, index) => {\n            //   return { ...line, collapsed: index === lineClicked.index }\n            // }));\n\n            if (newLinesToMute.length > 1) {\n                // setMutedLines([...mutedLines, ...newLinesToMute]);\n                setLines(lines.map((line, index) => {\n                    return { \n                        ...line, \n                        collapsed: index === lineClicked.index ? true : line.collapsed };\n                }));\n            }\n        }\n    };\n\n    const clearMutedLines = () => {\n        setLines(lines.map(line => {\n            return {\n                ...line,\n                collapsed: false\n            };\n        }));\n    };\n\n    const resetMutedLines = () => {\n        setLines(lines.map((line, index) => {\n            return {\n                ...line,\n                collapsed: initialCollapsedLines.includes(index)\n            };\n        }));\n    };\n\n    const handleIndentSizeDropdown = (event) => {\n        setIndentSize(Number(event.target.value));\n        // console.log(typeof event.target.value);\n        setLines(generateCodeAsLines(code, Number(event.target.value)));\n    };\n\n    const generateCodeAsLines = (jsonObj, indent=3) => {\n        // indent matters, so let's redo this one\n        let codeAsStr = JSON.stringify(jsonObj, null, indent);\n        // escape these characters <, >, &\n        codeAsStr = codeAsStr\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\");\n    \n        // escape preceding spaces\n        codeAsStr = codeAsStr\n            .split(\"\\n\")\n            .map(line => {\n                return line.replace(/^ +/g, match => {\n                    return match.replace(/ /g, \"&nbsp;\");\n                });\n            }).join(\"\\n\");\n    \n        // tag string with their html corresponding color a span\n        codeAsStr = codeAsStr.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/g, (match) => {\n            let cls = \"number\";\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = \"key\";\n                } else {\n                    cls = \"string\";\n                }\n            } else if (/true|false/.test(match)) {\n                cls = \"boolean\";\n            } else if (/null/.test(match)) {\n                cls = \"null\";\n            }\n            return \"<span class=\\\"\" + cls + \"\\\">\" + match + \"</span>\";\n        });\n\n        // wrap lines with links (without whitespace)\n        codeAsStr = codeAsStr.replace(/\\{\\{(.*)\\}\\}/g, (match) => {\n            const mustache_key = match.replace(\"{{\", \"\").replace(\"}}\", \"\");\n            const displaytext = lineLinks[mustache_key][\"displayText\"];\n            const link = lineLinks[mustache_key][\"link\"];\n            const embed = lineLinks[mustache_key][\"embed\"];\n\n            if (embed) {\n                return embed;\n            }\n\n            return \"<a class=\\\"line-link\\\" href=\\\"\" + link + \"\\\">\" + displaytext + \"</a>\";\n        });\n\n        // add metadata, line by line\n        // ex: isKeyLine - is this a key for yaml or json?\n        // ex: link\n        const keySpanRegex = /<span class=\"key\">\"(.*?)\":<\\/span>/;\n        const lines = codeAsStr.split(\"\\n\").map((line, index) => {\n            const isKeyLine = line.indexOf(\"class=\\\"key\\\"\") !== -1;\n\n            let key = null;\n            if (isKeyLine) {\n                const match = line.match(keySpanRegex);\n                key = match[1]; // guaranteed to exist\n            }\n\n            return {\n                key,\n                htmlLine: line,\n                index,\n                isKeyLine,\n                collapsed: initialCollapsedLines.includes(index),\n            };\n        });\n\n        // console.log('mutedlines===>', mutedLines);\n        return lines;\n    };\n\n    return !isLoading && (\n        <section className={`window ${isDoingBarrelRoll ? \"animate\" : \"\"}`}>\n            <div className=\"window-top\">\n                <div className=\"window__controls\">\n                    <span></span>\n                    <span onClick={() => resetMutedLines()}></span>\n                    <span onClick={() => clearMutedLines()}></span>\n                </div>\n                <div className=\"window__title\">Click on {mutedLines.length !== 0 ? \"green to expand all\" : \"yellow to reset\"}</div>\n            </div>\n            <div className=\"window-main\">\n                <ol>\n                    {lines\n                        .filter((_, index) => {\n                            return mutedLines.indexOf(index) === -1;\n                        })\n                        .map((line, index) => {\n                            let finalHtmlLine = line.htmlLine;\n                            if (line.collapsed) {\n                                const penultimateChar = line.htmlLine[line.htmlLine.length-1];\n\n                                if ([\"[\", \"{\"].indexOf(penultimateChar) !== -1) {\n                                    const closingChar = penultimateChar === \"[\" ? \"]\" : \"}\";\n                                    finalHtmlLine += \"...\" + closingChar;\n                                }\n                            }\n                            // console.log(typeof index);\n                            return <li\n                                key={\"text-li-\" + index.toString()}\n                                value={line.index}\n                                onClick={() => {clickedOnLine(line);}} \n                                dangerouslySetInnerHTML={{ __html: finalHtmlLine }}\n                            />;\n                        })\n                    }\n                </ol>\n            </div>\n            <div className='window-bottom'>\n                <div className='window-bottom-statictext'>\n                    master<super>*</super>\n                    {\" \"}\n                    <BsArrowRepeat onClick={() => {setIsDoingBarrelRoll(true);}}/>\n                </div>\n\n                <div className='window-bottom-statictext'></div>\n\n                {lastLineClicked !== -1 && <div className='window-bottom-statictext'>Ln {lastLineClicked}</div>}\n\n                <div className='window-bottom-statictext'>\n\n                    {\"Spaces: \"}\n                    <select value={indentSize} onChange={handleIndentSizeDropdown}>\n                        {[1, 2, 3, 4, 8].map(num => {\n                            return <option key={\"option-indent-size-\" + num.toString()} value={num}>{num}</option>;\n                        })}\n                    </select>\n\n                    <select defaultValue={\"UTF-8\"}>\n                        {[\"UTF-8\", \"What\", \"else\", \"could\", \"possibly\", \"be\", \"here?\"].map((val, index) => {\n                            return <option key={\"option-indent-utf-\" + index.toString()} value={val}>{val}</option>;\n                        })}\n                    </select>\n\n                    <select defaultValue={\"JSON\"}>\n                        {[\"JSON\", \"YAML\"].map((val, index) => {\n                            let disabled = false;\n                            if (val !== \"JSON\") {\n                                disabled = true;\n                            }\n                            return <option key={\"option-indent-language-\" + index.toString()} value={val} disabled={disabled}>{val}</option>;\n                        })}\n                    </select>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default VSCodeEditor;\n\nexport {\n    code,\n    VSCodeEditorAsPage\n};","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LinkCard from \"./components/LinkCard\";\nimport styled from \"styled-components\";\nimport IconCard, {Icons} from \"./components/IconCard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport { useState } from \"react\";\nimport css from \"./glowing.module.scss\";\nimport Editor from \"./components/VSCodeEditor\";\nimport React from \"react\";\n\nconst CardHolder = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    justify-content: center;\n`;\n\nconst makeLinks = () => {\n    const linkData = [\n        {\n            \"link\": \"https://www.tennisgazelle.com\",\n            \"title\": \"TennisGazelle\"\n        },\n        {\n            \"link\": \"https://www.linktr.ee/tennisgazelle\",\n            \"title\": \"Link Tree\"\n        },\n        {\n            \"link\": \"https://www.musescore.com\",\n            \"title\": \"Musescore\"\n        },\n    ];\n\n    return linkData.map(datum => {\n        return datum.link ? <LinkCard link={datum.link}>\n            {datum.title}\n        </LinkCard> : <div></div>;\n    });\n};\n\n\nconst makeIcons = () => {\n    const iconData = [\n        {\n            \"link\": \"https://www.github.com\",\n            \"icon\": \"github\"\n        },\n        {\n            \"link\": \"https://www.facebook.com\",\n            \"icon\": \"facebook\"\n        }\n    ];\n\n    return iconData.map((datum, index) => {\n        const IconToRender = Icons[datum.icon];\n        const size = \"100px\";\n\n        return <div key={\"datum-\" + index.toString()}>{datum.link}</div>;\n\n    // return datum.link ? <IconCard link={datum.link}>\n    //   <IconToRender width={size} height={size} dropshadow=\"100px\"/>\n    // </IconCard> : <div></div>\n    });\n};\n\nfunction App() {\n\n    const code = {\n        \"Daniel Lopez\": {\n            \"resume\": \"<- Click that word\",\n            \"links\": [\n                \"github\",\n                \"twitter\",\n                \"musescore\",\n                \"hitrecord\"\n            ],\n            \"jobs\": {\n                \"Intuit Turbo Tax\" : {\n                    \"role\": \"DevOps Engineer\",\n                    \"experience\": \"2 years\"\n                }\n            },\n            \"school\": {\n                \"University of Nevada, Reno\": {\n                    \"M.S.\": 2018,\n                    \"B.S.\": 2017\n                }\n            }\n        }\n    };\n\n    const [codeAsString, setCodeAsString] = useState(JSON.stringify(code, {}, 3));\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n                {/* <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p> */}\n\n                {/* <CardHolder>\n          {makeLinks()}\n        </CardHolder> */}\n\n                {/* {makeIcons()} */}\n\n                {/* <div className={`${css['shadow']}`}>hi there</div>\n\n        <CodeEditor\n          value={codeAsString}\n          language=\"json\"\n          placeholder=\"Please enter JS code.\"\n          onChange={(evn) => setCodeAsString(evn.target.value)}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#f5f5f5\",\n            fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\n          }}\n        /> */}\n\n            </header>\n\n\n            {/* <PhoneChat /> */}\n\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nconst collectLatLong = () => {\n    if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition((pos) => {\n            console.log(pos);\n        });\n    } else {\n        console.log(\"geolocation not in navigator\");\n    }\n    return;\n};\n\nexport default reportWebVitals;\n\nexport {\n    collectLatLong\n};","import React from \"react\";\nimport \"./AmongUs.scss\";\n\nconst AmongUs = () => {\n    return (\n        <div className=\"boi\">\n            <div className=\"rightleg\"></div>\n            <div className=\"leftleg\"></div>\n            <div className=\"backpack\"></div>\n            <div className=\"belly\"></div>\n            <div className=\"eye\"></div>\n            {/* <div className=\"leftleg\"></div> */}\n\n        </div>\n\n    );\n};\n\nexport default AmongUs;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals, { collectLatLong } from \"./reportWebVitals\";\nimport VSCodeEditor, { VSCodeEditorAsPage } from \"./components/VSCodeEditor\";\nimport Carousel, { carouselChildren, sources } from \"./components/Carousel\";\n// import Carousel2 from \"./components/Carousel2\";\nimport AmongUs from \"./components/AmongUs\";\n\nReactDOM.render(\n    <React.StrictMode>\n        {/* <App /> */}\n        {/* <PhoneChat /> */}\n\n        <VSCodeEditorAsPage />\n        <AmongUs />\n\n        {/* <Carousel>\n            <h1>hi there</h1>\n            <h2>the second elem</h2>\n            <p>whoa now, we got 3?</p>\n            <Editor />\n            {carouselChildren(sources)}\n        </Carousel> */}\n\n        {/* <Carousel2/> */}\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\ncollectLatLong();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shadow\":\"glowing_shadow__1cQ0D\",\"animate\":\"glowing_animate__1C8Bo\"};"],"sourceRoot":""}